name: Deploy Staging

on:
  push:
    branches:
      - develop

jobs:
  install: # Runs install once before everything to create & save cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
  deploy-api:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - name: serverless deploy
        working-directory: ./packages/api
        run: yarn serverless deploy --stage staging
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SECRET: ${{ secrets.STAGING_CLUSTER_SECRET }}
  deploy-server:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - name: Create SSH directory
        run: mkdir -p ~/.ssh
      - name: Create SSH Private Key
        run: echo "$SSH_KEY" > ~/.ssh/picnic && chmod 600 ~/.ssh/picnic
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - run: eval "$(ssh-agent -s)" && ssh-add ~/.ssh/picnic
        name: register ssh agent
      - run: node dumpEnv.js
        name: generate env file
        working-directory: ./packages/server
        env:
          CLUSTER_API: ${{ secrets.STAGING_CLUSTER_API }}
          CLUSTER_SECRET: ${{ secrets.STAGING_CLUSTER_SECRET }}
          PUBLIC_IP: "15.236.169.203"
      - run: "scp -i ~/.ssh/picnic server-env ubuntu@15.236.169.203:~/server-env"
        name: upload env vars
        working-directory: ./packages/server
      - name: pm2 deploy
        working-directory: ./packages/server
        run: yarn pm2 deploy staging --force
  deploy-client-public:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - name: build public website
        working-directory: ./packages/client
        run: yarn build:public
        env:
          WS_API: ${{ secrets.STAGING_WEBSOCKET }}
          HTTP_API: ${{ secrets.STAGING_CLUSTER_API }}
      - name: update stack
        working-directory: ./packages/client
        run: yarn serverless deploy --stage staging
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      - name: deploy public
        working-directory: ./packages/client
        run: yarn serverless client deploy --stage staging --no-confirm
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  deploy-client-sdk:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - name: publish sdk
        working-directory: ./packages/client
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_SDK }}
