service: broadcast-service-api

frameworkVersion: ^2.11.0

configValidationMode: error

plugins:
  - serverless-dotenv-plugin
  - serverless-stage-manager
  - serverless-domain-manager
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-plugin-monorepo
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-3
  memorySize: 512
  timeout: 30
  logRetentionInDays: 14
  stage: ${opt:stage}
  profile: picnic # aws credential profile name
  websocketsApiRouteSelectionExpression: $request.body.action # custom routes are selected by the value of the action property in the body
  environment:
    SECRET: ${env:SECRET, 'super-SECRET'}
    MONGO_DB_URL: "${env:MONGO_DB_URL}"
    WEBSOCKET_DOMAIN: "#{WebsocketsApi}.execute-api.#{AWS::Region}.amazonaws.com/${self:provider.stage}"
    SENTRY_ENVIRONMENT: "${self:provider.stage}"
    USER_SERVICE_API_SECRET: "${env:USER_SERVICE_API_SECRET}"
    USER_SERVICE_API_ENDPOINT: "${env:USER_SERVICE_API_ENDPOINT}"
    SPACE_SERVICE_API_ENDPOINT: "${env:SPACE_SERVICE_API_ENDPOINT}"
    SENTRY_DNS: "${env:SENTRY_DNS}"
    MAX_POOL_SIZE: ${env:MAX_POOL_SIZE, 5}
    MIN_POOL_SIZE: ${env:MIN_POOL_SIZE, 0}
    POOL_SIZE: ${env:POOL_SIZE, 5}
  apiGateway:
    shouldStartNameWithService: true
  tracing:
    apiGateway: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - execute-api:Invoke
        - execute-api:ManageConnections
      Resource: "arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/${self:provider.stage}/*"
package:
  individually: false

functions:
  - ${file(./serverless/adminRoutes.yml)}
  - ${file(./serverless/eventRoutes.yml)}
  - ${file(./serverless/websocket.yml)}

custom:
  sbs:
    domains:
      production: "broadcast.sidebyside.live"
      staging: "broadcast.dev.sidebyside.live"
      dev: "localhost"
    wsDomains:
      production: "broadcast-ws.sidebyside.live"
      staging: "broadcast-ws.dev.sidebyside.live"
      dev: "localhost"
  serverless-offline:
    useChildProcesses: true
    httpPort: 4009
    lambdaPort: 3009
  webpack:
    webpackConfig: "webpack.config.js"
    keepOutputDirectory: true
    includeModules: true
    packager: "yarn"
    excludeFiles: src/**/*.test.js

  stages:
    - dev
    - production
    - staging

  customDomain:
    rest:
      domainName: ${self:custom.sbs.domains.${opt:stage, self:provider.stage}}
      stage: ${opt:stage}
      basePath: api
      certificateName: "*.sidebyside.live"
      createRoute53Record: true
      endpointType: "regional"
      apiType: rest
      autoDomain: true
    websocket:
      domainName: ${self:custom.sbs.wsDomains.${opt:stage, self:provider.stage}}
      stage: ${opt:stage}
      certificateName: "*.sidebyside.live"
      createRoute53Record: true
      endpointType: "regional"
      apiType: websocket
      autoDomain: true
