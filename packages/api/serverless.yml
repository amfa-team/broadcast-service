service:
  name: broadcast-service-api

plugins:
  - serverless-dotenv-plugin
  - serverless-stage-manager
  - serverless-pseudo-parameters
  - serverless-webpack
  - serverless-plugin-monorepo
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-3
  memorySize: 512
  stage: ${opt:stage}
  profile: picnic # aws credential profile name
  websocketsApiRouteSelectionExpression: $request.body.action # custom routes are selected by the value of the action property in the body
  environment:
    SECRET: ${env:SECRET, 'super-SECRET'}
    CONNECTION_TABLE: "${self:service.name}-${self:provider.stage}-connection"
    PARTICIPANT_TABLE: "${self:service.name}-${self:provider.stage}-participants"
    SERVER_TABLE: "${self:service.name}-${self:provider.stage}-server"
    STREAM_TABLE: "${self:service.name}-${self:provider.stage}-stream"
    STREAM_CONSUMER_TABLE: "${self:service.name}-${self:provider.stage}-consumer"
    SEND_TRANSPORT_TABLE: "${self:service.name}-${self:provider.stage}-send-transport"
    RECV_TRANSPORT_TABLE: "${self:service.name}-${self:provider.stage}-recv-transport"
    STREAM_CONSUMER_TABLE_INDEX_SOURCE_TRANSPORT: "${self:service.name}-${self:provider.stage}-src-transport"
    WEBSOCKET_DOMAIN: "#{WebsocketsApi}.execute-api.#{AWS::Region}.amazonaws.com/${self:provider.stage}"
    SENTRY_ENVIRONMENT: "${self:provider.stage}"
    SENTRY_DNS: "${env:SENTRY_DNS}"
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:service.name}-${self:provider.stage}-*"
    - Effect: Allow
      Action:
        - execute-api:Invoke
        - execute-api:ManageConnections
      Resource: "arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/${self:provider.stage}/*"
package:
  individually: false

functions:
  - ${file(./serverless/adminRoutes.yml)}
  - ${file(./serverless/eventRoutes.yml)}
  - ${file(./serverless/websocket.yml)}

resources:
  Resources: ${file(./serverless/resources.yml)}

custom:
  serverless-offline:
    useChildProcesses: true
    httpPort: 4000
  webpack:
    webpackConfig: "webpack.config.js"
    keepOutputDirectory: true
    includeModules: true
    packager: "yarn"
    excludeFiles: src/**/*.test.js

  dynamodb:
    stages:
      - dev
    start:
      port: 9005
      isMemory: true
      migrate: true
  stages:
    - dev
    - production
    - staging
